{"version":3,"sources":["webpack:///./ui/components/validator.js"],"names":["Validator","props","state","options","value","text","map","option","key","React","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;IAEqBA,S;;;;;AACnB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,aAAO,EAAE,CACP;AACEC,aAAK,EAAE,SADT;AAEEC,YAAI,EAAE;AAFR,OADO,EAKP;AACED,aAAK,EAAE,SADT;AAEEC,YAAI,EAAE;AAFR,OALO,EASP;AACED,aAAK,EAAE,YADT;AAEEC,YAAI,EAAE;AAFR,OATO,EAaP;AACED,aAAK,EAAE,QADT;AAEEC,YAAI,EAAE;AAFR,OAbO,EAiBP;AACED,aAAK,EAAE,aADT;AAEEC,YAAI,EAAE;AAFR,OAjBO,EAqBP;AACED,aAAK,EAAE,cADT;AAEEC,YAAI,EAAE;AAFR,OArBO,EAyBP;AACED,aAAK,EAAE,MADT;AAEEC,YAAI,EAAE;AAFR,OAzBO,EA6BP;AACED,aAAK,EAAE,YADT;AAEEC,YAAI,EAAE;AAFR,OA7BO,EAiCP;AACED,aAAK,EAAE,SADT;AAEEC,YAAI,EAAE;AAFR,OAjCO;AADE,KAAb;AAHiB;AA2ClB;;;;6BACQ;AACP,aACE,wEACE,yEACE;AAAO,eAAO,EAAC;AAAf,iCADF,EAEE;AAAO,iBAAS,EAAC,cAAjB;AAAgC,YAAI,EAAC,MAArC;AAA4C,UAAE,EAAC;AAA/C,QAFF,EAGE;AAAO,eAAO,EAAC;AAAf,iCAHF,EAIE;AAAQ,iBAAS,EAAC,cAAlB;AAAiC,oBAAY,EAAC;AAA9C,SACE;AAAQ,aAAK,EAAC,SAAd;AAAwB,gBAAQ;AAAhC,yBADF,EAIG,KAAKH,KAAL,CAAWC,OAAX,CAAmBG,GAAnB,CAAuB,UAACC,MAAD,EAASC,GAAT,EAAiB;AACvC,eAAO;AAAQ,eAAK,EAAEJ;AAAf,UAAP;AACD,OAFA,CAJH,CAJF,CADF,CADF;AAiBD;;;;EA/DoCK,4CAAK,CAACC,S","file":"app.12cfa51b16a4703eed94.hot-update.js","sourcesContent":["import React from 'react'\n\nexport default class Validator extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      options: [\n        {\n          value: 'rankine',\n          text: 'Rankine',\n        },\n        {\n          value: 'celsius',\n          text: 'Celsius',\n        },\n        {\n          value: 'fahrenheit',\n          text: 'Fahrenheit',\n        },\n        {\n          value: 'litres',\n          text: 'Litres',\n        },\n        {\n          value: 'tablespoons',\n          text: 'Tablespoons',\n        },\n        {\n          value: 'cubic-inches',\n          text: 'Cubic Inches',\n        },\n        {\n          value: 'cups',\n          text: 'Cups',\n        },\n        {\n          value: 'cubic-feet',\n          text: 'Cubic Feet',\n        },\n        {\n          value: 'gallons',\n          text: 'Gallons',\n        },\n      ],\n    }\n  }\n  render() {\n    return (\n      <div>\n        <form>\n          <label htmlFor='nummericalValue'>Input Numerical Value</label>\n          <input className='form-control' type='text' id='numericalValue' />\n          <label htmlFor='unitOfMeasure'>Input Unit of Measure</label>\n          <select className='form-control' defaultValue='default'>\n            <option value='default' disabled>\n              Please select\n            </option>\n            {this.state.options.map((option, key) => {\n              return <option value={value}></option>\n            })}\n          </select>\n        </form>\n      </div>\n    )\n  }\n}\n"],"sourceRoot":""}